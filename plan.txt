Here is one approach to build a machine learning model that can analyze aerial imagery of NFL offensive formations and predict both the formation type and play call using Python:

Data Collection

Gather overhead imagery of NFL games showing offensive formations and plays.
Capture frames right before the snap to get player positions.
Label each image with the offensive formation type and the play call.
Data Preprocessing

Detect players in each overhead image using object detection techniques like YOLO.
Extract x,y coordinates for each player on the field.
Normalize coordinates to make them rotation and scale invariant.
Model Training

Use the normalized coordinates as input features into a multi-output model.
One output predicts the offensive formation type (I-form, shotgun etc).
Second output predicts the play type (run, pass, play-action etc).
Explore models like multi-output SVM, neural networks etc.
Prediction

For a new overhead image, detect players and extract normalized coordinates.
Pass these as input to the trained model.
Model will predict both the offensive formation and the play call.
Evaluation

Evaluate formation and play prediction accuracy separately.
Identify most challenging formations and plays to improve model.
This demonstrates how overhead view of the field can enable more detailed prediction from formations. The key is robust preprocessing and a model capable of multi-task learning and handling ambiguity.

Here are the key steps to implement this machine learning project:

Use NFL game footage to extract overhead imagery of offensive formations right before the snap.
Manually label each image with the formation type (shotgun, I-form etc) and the play call (run, pass etc). Build a dataset.
Write a script to detect players in each image using object detection models like YOLO pre-trained on football players.
Extract the x,y coordinates of each detected player and normalize them to account for rotation and scale variances.
Design a multi-output neural network model in Keras that takes the normalized coordinates as input. Have separate output layers for predicting formation and play call.
Train the model on the collected image dataset using model checkpoints, regularization and hyperparameter tuning for optimal results.
Evaluate the model by checking formation and play prediction accuracy on a hold-out test set. Identify areas of improvement.
For real-time usage, process each new image, run players detection and coordinate extraction, feed into model for predictions.
Build a simple UI to take in overhead imagery and display predicted formation and play call overlayed on the field.
The key aspects are collecting a varied, labelled imagery dataset, robust preprocessing pipelines, designing an accurate multi-output model architecture and rigorously evaluating performance.